#
# The following environment variables should be predefined:
#
# CUDA_INSTALL_PATH
# PARMETIS_INSTALL_PATH
# PTSCOTCH_INSTALL_PATH
# HDF5_INSTALL_PATH
#
# OP2_INSTALL_PATH
# OP2_COMPILER (gnu,intel,etc)
#

#
# set paths for header files and libraries
#
OP2_INC		= -I$(OP2_INSTALL_PATH)/c/include
OP2_LIB		= -L$(OP2_INSTALL_PATH)/c/lib

CUDA_INC	= -I$(CUDA_INSTALL_PATH)/include
CUDA_LIB	= -L$(CUDA_INSTALL_PATH)/lib64


ifeq ($(OP2_COMPILER),gnu)
  CPP		= g++
  CPPFLAGS	= -g -fPIC -DUNIX -Wall #-Wextra
  OMPFLAGS	= -fopenmp
  MPICPP	= /usr/bin/mpiCC
  MPIFLAGS	= $(CCFLAGS)
else
ifeq ($(OP2_COMPILER),intel)
  CPP		= icpc
  CCFLAGS	= -O3 -vec-report -xSSE4.2 -parallel #-DCOMM_PERF#-g #-DCOMM_PERF #-DDEBUG
  CPPFLAGS 	= $(CCFLAGS)
  OMPFLAGS	= -openmp -openmp-report2
  MPICPP	= mpiCC
  MPIFLAGS	= $(CPPFLAGS)
else
print:
	@echo "unrecognised value for OP2_COMPILER"
endif
endif

#
# set flags for NVCC compilation and linking
#

NVCCFLAGS	= -O3 -arch=sm_20 -Xptxas=-v -Dlcm=ca -use_fast_math #-g -G -O0

#VAR		= -DOP_PART_SIZE_1=512 -DOP_PART_SIZE_2=1024 -DOP_PART_SIZE_3=64
#-DOP_BLOCK_SIZE_0=512 -DOP_BLOCK_SIZE_1=64 -DOP_BLOCK_SIZE_2=64 -DOP_BLOCK_SIZE_3=64 -DOP_BLOCK_SIZE_4=64

#
# partitioning software for MPI versions
#

PARMETIS_INC = -I$(PARMETIS_INSTALL_PATH) -DHAVE_PARMETIS
PARMETIS_LIB = -L$(PARMETIS_INSTALL_PATH) -lparmetis \
               -L$(PARMETIS_INSTALL_PATH) -lmetis

PTSCOTCH_INC = -I$(PTSCOTCH_INSTALL_PATH)/include -DHAVE_PTSCOTCH
PTSCOTCH_LIB = -L$(PTSCOTCH_INSTALL_PATH)/lib/ -lptscotch \
               -L$(PTSCOTCH_INSTALL_PATH)/lib/ -lptscotcherr

#
# master to make all versions
#

all: clean reduce_seq reduce_openmp reduce_cuda

#
# simple sequential version
#

reduce_seq: addto.h addto_id.h count.h Makefile
	     $(CPP) $(CPPFLAGS) reduce.cpp $(OP2_INC) $(OP2_LIB) -lop2_seq -o reduce_seq

#
# x86 version using kernel files generated by op2.m
#

reduce_openmp:	reduce_op.cpp reduce_kernels.cpp \
		addto_kernel.cpp  addto.h \
		addto_id_kernel.cpp   addto_id.h  \
		count_kernel.cpp   count.h  \
    Makefile
		$(CPP) $(VAR) $(CPPFLAGS) $(OMPFLAGS) $(OP2_INC) $(OP2_LIB) \
		reduce_op.cpp reduce_kernels.cpp -lm -lop2_openmp -o reduce_openmp

#
# CUDA version using kernel files generated by op2.m
#

reduce_cuda:	reduce_op.cpp reduce_kernels_cu.o Makefile
		$(CPP) $(VAR) $(CPPFLAGS) $(CUDA_INC) $(OP2_INC) $(OP2_LIB) $(CUDA_LIB) \
		reduce_op.cpp reduce_kernels_cu.o -lcudart -lop2_cuda -o reduce_cuda

reduce_kernels_cu.o:	reduce_kernels.cu      \
		addto_kernel.cu  addto.h \
		addto_id_kernel.cu   addto_id.h  \
		count_kernel.cu   count.h  \
    Makefile
		nvcc $(VAR) $(INC) $(NVCCFLAGS) $(OP2_INC) \
		-c -o reduce_kernels_cu.o \
		reduce_kernels.cu

#
# cleanup
#

clean:
		rm -f reduce_seq reduce_openmp reduce_cuda *.o
