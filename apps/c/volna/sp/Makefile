#
# The following environment variables should be predefined:
#
# OP2_INSTALL_PATH
# HDF5_INSTALL_PATH
# MPI_INSTALL_PATH
#

#
# set paths for header files and libraries
#

LIBMESH_INC = -I$(LIBMESH_INSTALL_PATH)/include
LIBMESH_LIB = -L$(LIBMESH_INSTALL_PATH)/lib

OP2_INC = -I$(OP2_INSTALL_PATH)/c/include
OP2_LIB = -L$(OP2_INSTALL_PATH)/c/lib

#VOLNA_INC = -I$(VOLNA_INSTALL_PATH)/src
#VOLNA_SRC = $(VOLNA_INSTALL_PATH)/src

HDF5_INC = -I$(HDF5_INSTALL_PATH)/include
HDF5_LIB = -L$(HDF5_INSTALL_PATH)/lib -lhdf5_hl -lhdf5 -lz

MPI_INC = -I$(MPI_INSTALL_PATH)/include

ifeq ($(OP2_COMPILER),gnu)
	CPP = g++
#	CPPFLAGS = -g0 -msse3 -fPIC -DUNIX -Wall
	CPPFLAGS = -g -fPIC -DUNIX -Wall -O0 -DDEBUG -arch x86_64
	#CPPFLAGS = -g -fPIC -DUNIX -Wall
	OMPFLAGS = -fopenmp
	MPICPP = mpic++
	MPIFLAGS = $(CCFLAGS)
else
ifeq ($(OP2_COMPILER),intel)
	CPP = icpc
	CCFLAGS = -g -O0 -vec-report -xSSE4.2 -parallel
	#CCFLAGS = -g -vec-report -xSSE4.2 -parallel
	CPPFLAGS = $(CCFLAGS)
	OMPFLAGS = -openmp -openmp-report2
	MPICPP = mpiCC
	MPIFLAGS = $(CPPFLAGS)
else
print:
		@echo "unrecognized value for OP2_COMPILER"
endif
endif

#
# set flags for NVCC compilation and linking
#
NVCCFLAGS	= -arch=sm_20 -Xptxas=-v -Dlcm=ca -use_fast_math -O0 #-g -G

#
# master to make all versions
#


#VOLNA_SOURCES = \
# 	$(VOLNA_SRC)/values.cpp\
#	$(VOLNA_SRC)/event.cpp\
#	$(VOLNA_SRC)/geom.cpp

#VOLNA_OBJECTS = $(VOLNA_SOURCES:.cpp=.o)

all: clean volna volna_openmp volna_cuda

volna: volna.cpp Makefile
	$(MPICPP) $(CPPFLAGS) volna.cpp volna_event.cpp volna_init.cpp volna_output.cpp volna_simulation.cpp $(HDF5_INC) $(OP2_INC) $(HDF5_LIB) $(OP2_LIB) -lop2_seq -lop2_hdf5 -o volna

volna_openmp: volna_op.cpp volna_init_op.cpp volna_output_op.cpp volna_simulation_op.cpp
	$(MPICPP) $(CPPFLAGS) $(OMPFLAGS)  volna_op.cpp volna_init_op.cpp volna_output_op.cpp volna_simulation_op.cpp volna_event.cpp volna_kernels.cpp $(HDF5_INC) $(OP2_INC) $(HDF5_LIB) $(OP2_LIB) -lop2_openmp -lop2_hdf5 -o volna_openmp


#
# CUDA version using kernel files generated by op2.m
#

volna_cuda:	volna_op.cpp volna_kernels_cu.o volna_simulation_op.cpp volna_init_op.cpp volna_output_op.cpp Makefile
		$(MPICPP) $(VAR) $(CPPFLAGS) volna_op.cpp volna_simulation_op.cpp volna_event.cpp volna_init_op.cpp volna_output_op.cpp volna_kernels_cu.o \
		$(CUDA_INC) $(OP2_INC) $(HDF5_INC) \
		$(OP2_LIB) $(CUDA_LIB) -lcudart -lop2_cuda -lop2_hdf5 $(HDF5_LIB) -o volna_cuda

volna_kernels_cu.o:	volna_kernels.cu \
		EvolveValuesRK2_1.h EvolveValuesRK2_2.h FacetsValuesFromCellValues.h getMaxElevation.h getTotalVol.h \
		initBathymetry_formula.h initBathymetry_update.h initBore_select.h initEta_formula.h initGaussianLandslide.h \
		initU_formula.h initV_formula.h NumericalFluxes_1.h NumericalFluxes_2.h simulation_1.h SpaceDiscretization_1.h \
		SpaceDiscretization_2.h SpaceDiscretization_3.h values_operation2.h applyConst_kernel.cu EvolveValuesRK2_1_kernel.cu \
		EvolveValuesRK2_2_kernel.cu FacetsValuesFromCellValues_kernel.cu getMaxElevation_kernel.cu getTotalVol_kernel.cu \
		initBathymetry_formula_kernel.cu initBathymetry_update_kernel.cu initBore_select_kernel.cu initEta_formula_kernel.cu \
		initGaussianLandslide_kernel.cu initU_formula_kernel.cu initV_formula_kernel.cu NumericalFluxes_1_kernel.cu NumericalFluxes_2_kernel.cu \
		simulation_1_kernel.cu SpaceDiscretization_1_kernel.cu SpaceDiscretization_2_kernel.cu SpaceDiscretization_3_kernel.cu \
		values_operation2_kernel.cu Makefile

		nvcc  $(VAR) $(INC) $(NVCCFLAGS) $(OP2_INC) $(HDF5_INC) -I /home/gihan/openmpi-intel/include -c -o volna_kernels_cu.o volna_kernels.cu

#
# cleanup
#

clean:
		rm -f volna volna_openmp volna_cuda *.o

#%.o: %.cpp %.hpp
#	$(CPP) $(CPPFLAGS) -c -o $@ $<
